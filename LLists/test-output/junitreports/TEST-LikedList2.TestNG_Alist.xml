<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="LikedList2.TestNG_Alist" tests="1" time="0.034" ignored="80" failures="1" timestamp="22 дек 2016 08:06:57 GMT" skipped="0" hostname="MICROSOFT-PC" errors="0">
  <testcase name="testSort_testMethod" time="0.034" classname="LikedList2.TestNG_Alist">
    <failure type="java.lang.AssertionError" message="array lengths differed, expected.length=10 actual.length=1">
      <![CDATA[java.lang.AssertionError: array lengths differed, expected.length=10 actual.length=1
	at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
	at org.testng.internal.junit.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:70)
	at org.testng.internal.junit.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:34)
	at org.testng.internal.junit.ArrayAsserts.internalArrayEquals(ArrayAsserts.java:279)
	at org.testng.internal.junit.ArrayAsserts.assertArrayEquals(ArrayAsserts.java:155)
	at org.testng.internal.junit.ArrayAsserts.assertArrayEquals(ArrayAsserts.java:168)
	at LikedList2.TestNG_Alist.testSort_testMethod(TestNG_Alist.java:657)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- testSort_testMethod -->
  <testcase name="testToString_2_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testToString_2_el -->
  <testcase name="testhalfReverse_1_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testhalfReverse_1_el -->
  <testcase name="testdelEnd_iniArray_1_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelEnd_iniArray_1_elem -->
  <testcase name="testAddStart_0_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testAddStart_0_elem -->
  <testcase name="testminPos" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testminPos -->
  <testcase name="testaddPos_0_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testaddPos_0_el -->
  <testcase name="testGet_2_pos" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testGet_2_pos -->
  <testcase name="testSet_toStartPos" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSet_toStartPos -->
  <testcase name="testdelPos_2_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelPos_2_el -->
  <testcase name="testmaxPos_ImptyArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testmaxPos_ImptyArray -->
  <testcase name="testMin_0_elem_inArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testMin_0_elem_inArray -->
  <testcase name="testSort_1_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSort_1_el -->
  <testcase name="testAddStart_1_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testAddStart_1_elem -->
  <testcase name="testminPos_2_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testminPos_2_elem -->
  <testcase name="testdelStart_1_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelStart_1_elem -->
  <testcase name="testMax_1_elem_inArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testMax_1_elem_inArray -->
  <testcase name="testMax_2_elem_inArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testMax_2_elem_inArray -->
  <testcase name="testAddStart_2_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testAddStart_2_elem -->
  <testcase name="testminPos_ImptyArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testminPos_ImptyArray -->
  <testcase name="testGet_posit_eqal_40" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testGet_posit_eqal_40 -->
  <testcase name="testToString_1_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testToString_1_el -->
  <testcase name="testMin_2_elem_inArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testMin_2_elem_inArray -->
  <testcase name="testMin_1_elem_inArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testMin_1_elem_inArray -->
  <testcase name="testmaxPos_2_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testmaxPos_2_elem -->
  <testcase name="testmaxPos" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testmaxPos -->
  <testcase name="testdelEnd_iniArray_2_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelEnd_iniArray_2_elem -->
  <testcase name="testSort_Empty_array" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSort_Empty_array -->
  <testcase name="testGet_1_pos" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testGet_1_pos -->
  <testcase name="testdelStart_2_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelStart_2_elem -->
  <testcase name="testAddStart" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testAddStart -->
  <testcase name="testToString" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testToString -->
  <testcase name="testhalfReverse_notEven" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testhalfReverse_notEven -->
  <testcase name="testdelStart" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelStart -->
  <testcase name="testaddPos_50" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testaddPos_50 -->
  <testcase name="testhalfReverse_Even" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testhalfReverse_Even -->
  <testcase name="testSet_toEndPos" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSet_toEndPos -->
  <testcase name="testaddPos_m5" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testaddPos_m5 -->
  <testcase name="testdelEnd" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelEnd -->
  <testcase name="testreverse_notEven" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testreverse_notEven -->
  <testcase name="test_mult_2" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- test_mult_2 -->
  <testcase name="testMax" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testMax -->
  <testcase name="testSet" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSet -->
  <testcase name="testAddEnd_iniArray_1_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testAddEnd_iniArray_1_elem -->
  <testcase name="testToString_0_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testToString_0_el -->
  <testcase name="test_mult_many" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- test_mult_many -->
  <testcase name="testreverse_Even" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testreverse_Even -->
  <testcase name="testdelPos_m5" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelPos_m5 -->
  <testcase name="testdelPos_0_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelPos_0_el -->
  <testcase name="testminPos_1_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testminPos_1_el -->
  <testcase name="testGet" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testGet -->
  <testcase name="testaddPos_2_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testaddPos_2_el -->
  <testcase name="testMin" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testMin -->
  <testcase name="test_mult_1" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- test_mult_1 -->
  <testcase name="testhalfReverse_0" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testhalfReverse_0 -->
  <testcase name="test_mult_0" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- test_mult_0 -->
  <testcase name="testGet_posit_eqal_m4" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testGet_posit_eqal_m4 -->
  <testcase name="testAddEnd_iniArray_0_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testAddEnd_iniArray_0_elem -->
  <testcase name="testAddEnd_iniArray_2_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testAddEnd_iniArray_2_elem -->
  <testcase name="testMax_0_elem_inArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testMax_0_elem_inArray -->
  <testcase name="testmaxPos_1_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testmaxPos_1_el -->
  <testcase name="testhalfReverse_2_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testhalfReverse_2_el -->
  <testcase name="testAddStart_m30" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testAddStart_m30 -->
  <testcase name="testdelPos_1_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelPos_1_el -->
  <testcase name="testSet_toStartPos_40" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSet_toStartPos_40 -->
  <testcase name="testSet_1_elem_inArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSet_1_elem_inArray -->
  <testcase name="testSet_2_elem_inArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSet_2_elem_inArray -->
  <testcase name="testSet_0_elem_inArray" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSet_0_elem_inArray -->
  <testcase name="testdelStart_0_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelStart_0_elem -->
  <testcase name="testaddPos_1_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testaddPos_1_el -->
  <testcase name="testSort" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSort -->
  <testcase name="testSort_2_el" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSort_2_el -->
  <testcase name="testAddEnd" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testAddEnd -->
  <testcase name="testreverse_0" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testreverse_0 -->
  <testcase name="testaddPos" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testaddPos -->
  <testcase name="testSet_toStartPos_m4" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testSet_toStartPos_m4 -->
  <testcase name="testdelPos_50" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelPos_50 -->
  <testcase name="testreverse_2" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testreverse_2 -->
  <testcase name="testreverse_1" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testreverse_1 -->
  <testcase name="testdelEnd_iniArray_0_elem" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelEnd_iniArray_0_elem -->
  <testcase name="testdelPos" classname="LikedList2.TestNG_Alist">
    <skipped/>
  </testcase> <!-- testdelPos -->
</testsuite> <!-- LikedList2.TestNG_Alist -->
